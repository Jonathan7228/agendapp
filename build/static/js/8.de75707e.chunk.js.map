{"version":3,"sources":["pages/CreateTask/styles.js","pages/CreateTask/index.js","components/Topbar/styles.js","components/Topbar/index.js"],"names":["TextArea","styled","textarea","props","errors","Theme1","danger","LabelError","span","CreateTask","title","redirectData","useSelector","state","redirect","dispatch","useDispatch","respData","responsibles","useForm","mode","register","control","handleSubmit","formState","isValid","useEffect","fetchUsers","TOKEN","path","to","pathname","Topbar","isBackVisible","onSubmit","data","createTasks","Input","rules","required","minLength","name","label","type","placeholder","taskTitle","render","field","options","responsible","isMulti","collaborators","defaultValue","Date","format","locale","dueDateTask","rows","description","Button","disabled","text","TopbarContainer","div","TopbarTitle","BackButtonTopbar","primary","onPress","onClick"],"mappings":"oNAGaA,EAAWC,IAAOC,SAAV,oPAQD,SAAAC,GAAK,OAAIA,EAAMC,OAASC,IAAOC,OAAS,UAG/CC,EAAaN,IAAOO,KAAV,mEAEVH,IAAOC,Q,sCCkHLG,UApHK,SAAC,GAAa,IAAD,IAAXC,EAAW,EAAXA,MAEZC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAE1CC,EAAWC,cACXC,EAAWL,aAAY,SAAAC,GAAK,OAAIA,EAAMK,gBALf,EAQ0CC,YAAQ,CAACC,KAAM,aAA/EC,EARsB,EAQtBA,SAASC,EARa,EAQbA,QAASC,EARI,EAQJA,aARI,IAQUC,UAAYpB,EARtB,EAQsBA,OAAQqB,EAR9B,EAQ8BA,QAS3D,OAJAC,qBAAU,WACNX,EAASY,YAAWC,QACrB,IAEsB,IAArBjB,EAAakB,KACN,cAAC,IAAD,CACKC,GAAI,CAAEC,SAAUpB,EAAakB,QAM7C,eAAC,WAAD,WACI,cAACG,EAAA,EAAD,CAAQC,eAAe,EAAOvB,MAAOA,IACrC,uBAAMwB,SAAUX,GAlBG,SAACY,GACpBpB,EAASqB,YAAYD,OAiBrB,UAUA,cAACE,EAAA,EAAD,CAAOhB,SAAUA,EAAUiB,MAAO,CAACC,UAAU,EAAMC,UAAW,GAAIC,KAAK,QAAQC,MAAM,aAAaC,KAAK,OAAOC,YAAY,qBAE7F,cAAzB,UAAAxC,EAAOyC,iBAAP,eAAkBF,OAAqB,cAACpC,EAAD,6BAGd,eAAzB,UAAAH,EAAOyC,iBAAP,eAAkBF,OAAsB,cAACpC,EAAD,sCAG5C,gCACI,iDACA,cAAC,IAAD,CACIkC,KAAK,cACLnB,QAASA,EACTgB,MAAO,CAACC,UAAU,GAClBO,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OACJ,cAAC,IAAD,2BACQA,GADR,IAEIH,YAAY,qBACZI,QAAS/B,EAASC,mBAK1Bd,EAAO6C,aAAe,cAAC1C,EAAD,gCAG9B,gCACI,mDACA,cAAC,IAAD,CACIkC,KAAK,gBACLnB,QAASA,EACTgB,MAAO,CAACC,UAAU,GAClBO,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OAEJ,cAAC,IAAD,2BAAYA,GAAZ,IAAmBG,SAAO,EAACN,YAAY,SAASI,QAAS/B,EAASC,mBAItEd,EAAO+C,eAAiB,cAAC5C,EAAD,gCAGhC,gCACI,cAAC,IAAD,CACIkC,KAAK,WACLnB,QAASA,EACT8B,aAAe,IAAIC,KACnBf,MAAO,CAACC,UAAU,GAClBO,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OACJ,cAAC,IAAD,2BACQA,GADR,IAIIO,OAAO,UACPC,OAAO,cAKfnD,EAAOoD,aAAe,cAACjD,EAAD,gCAG9B,gCACA,gDACA,8BAEI,cAACP,EAAD,2BAAcqB,EAAS,cAAe,CAACkB,UAAU,KAAjD,IAAyDkB,KAAK,IAAIrD,OAAQA,EAAOsD,iBAIrF,eAACnD,EAAD,eAAcH,EAAOsD,aAAe,uBAEpC,8BACI,cAACC,EAAA,EAAD,CAAQC,UAAWnC,EAASkB,KAAK,SAAUkB,KAAK,qB,kGCzH/CC,EAAkB7D,IAAO8D,IAAV,mIAOfC,EAAc/D,IAAO8D,IAAV,8GAQXE,EAAmBhE,IAAO8D,IAAV,+KAMR1D,IAAO6D,S,eCpBflC,EAAS,SAAC,GAA4C,IAAD,IAAzCC,qBAAyC,SAAnBvB,EAAmB,EAAnBA,MAAOyD,EAAY,EAAZA,QAClD,OACI,eAACL,EAAD,WACK7B,GAAiB,cAACgC,EAAD,CAAkBG,QAASD,EAA3B,SAAoC,cAAC,IAAD,MACtD,cAACH,EAAD,UACI,6BAAKtD","file":"static/js/8.de75707e.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Theme1 } from \"../../themes/theme1\";\n\nexport const TextArea = styled.textarea`\n    width: 100%;\n    font-family: 'Roboto';\n    font-size: 1.1.em;\n    padding: 10px 15px;\n    box-sizing: border-box;\n    border-width: 1;\n    border-style: solid;\n    border-color: ${props => props.errors ? Theme1.danger : '#ccc'};\n    outline: none;\n`;\nexport const LabelError = styled.span`\n    font-weight: bold;\n    color: ${Theme1.danger}\n`;\n","import { Fragment,useEffect } from \"react\";\nimport { Button } from \"../../components/Button\";\nimport { Input } from \"../../components/Input\";\nimport { Topbar } from \"../../components/Topbar\";\nimport  Select  from \"react-select\";\nimport DatePicker  from \"react-date-picker\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextArea, LabelError } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers, createTasks, redirectDone } from \"../../store\";\nimport { TOKEN } from \"../../constants/Auth\";\nimport { Redirect } from \"react-router-dom\";\n\n\n const CreateTask = ({title}) => {\n\n    const redirectData = useSelector(state => state.redirect);\n\n    const dispatch = useDispatch();\n    const respData = useSelector(state => state.responsibles);\n\n\n    const {register,control, handleSubmit, formState: {errors, isValid}} = useForm({mode: 'onChange'});\n    const onSubmitCreate = (data) =>{\n        dispatch(createTasks(data));\n    };\n\n    useEffect(()=>{\n        dispatch(fetchUsers(TOKEN));\n    }, []);\n\n    if (redirectData.path != '') {\n        return <Redirect \n                    to={{ pathname: redirectData.path }}\n                />\n    }\n\n\n    return(\n    <Fragment>\n        <Topbar isBackVisible={false} title={title}></Topbar>\n        <form onSubmit={handleSubmit(onSubmitCreate)}>\n        {/*<Controller \n            name=\"taskTitle\"\n            control={control}\n            render={({field})=>(\n                <Input {...field}  label=\"Task title\" type=\"text\" placeholder=\"Enter task title\" />\n            )}\n        /> \n        */}\n      \n        <Input register={register} rules={{required: true, minLength: 6}} name=\"title\" label=\"Task title\" type=\"text\" placeholder=\"Enter task title\" /> \n        {\n            errors.taskTitle?.type==='required' && <LabelError>Field required</LabelError>   \n        }\n        {\n            errors.taskTitle?.type==='minLength' && <LabelError>Min Length 6 characters</LabelError>   \n        }\n\n        <div>\n            <label>Responsible </label>\n            <Controller \n                name=\"responsible\"\n                control={control}\n                rules={{required: true}}\n                render={({field})=>(\n                    <Select\n                        {...field}\n                        placeholder=\"Select responsible\" \n                        options={respData.responsibles}\n                    />  \n                )}\n            />\n            {\n                errors.responsible && <LabelError>Field required</LabelError>   \n            }\n        </div>\n        <div>\n            <label>Collaborators </label>\n            <Controller \n                name=\"collaborators\"\n                control={control}\n                rules={{required: true}}\n                render={({field})=>(\n                    \n                    <Select {...field} isMulti placeholder=\"select\" options={respData.responsibles} />\n                )}\n            />\n            {\n                errors.collaborators && <LabelError>Field required</LabelError>\n            }\n        </div>\n        <div>\n            <Controller\n                name=\"due_date\"\n                control={control}\n                defaultValue={ new Date()}\n                rules={{required: true}}\n                render={({field})=>(\n                    <DatePicker \n                        {...field}\n                        //value={dueDateTask}\n                        //onChange={setDueDateTask}\n                        format=\"y-MM-dd\"\n                        locale=\"en-En\"\n                    />\n                )}\n            />\n            {\n                errors.dueDateTask && <LabelError>Field required</LabelError>\n            }\n        </div>\n        <div>\n        <label>Description</label>\n        <div>\n        \n            <TextArea {...register(\"description\", {required: true})} rows=\"3\" errors={errors.description}>\n\n            </TextArea>\n        </div>\n        <LabelError> {errors.description && 'Field required'}</LabelError>\n        </div>\n        <div>\n            <Button disabled={!isValid} type=\"submit\"  text=\"Create\"/>\n        </div>\n        \n        </form>\n    </Fragment>\n    )\n    }\nexport default CreateTask;\n","import styled from \"styled-components\";\nimport { Theme1 } from \"./../../themes/theme1\";\nexport const TopbarContainer = styled.div`\n    //border: 1px solid black;\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n`;\n\nexport const TopbarTitle = styled.div`\n    flex: 1;\n    text-align: center;\n    h4{\n        font-size: 1.3em;\n    }\n`;\n\nexport const BackButtonTopbar = styled.div`\n    svg{\n        font-size: 1.5em;\n        color: #888;\n        cursor: pointer;\n        &:hover{\n            color: ${Theme1.primary};\n        }\n    }\n\n`;\n","import { BackButtonTopbar, TopbarContainer, TopbarTitle } from \"./styles\"\nimport { FaAngleLeft } from \"react-icons/fa\";\n\nexport const Topbar = ({ isBackVisible = true, title, onPress}) =>{\n    return(\n        <TopbarContainer>\n            {isBackVisible && <BackButtonTopbar onClick={onPress}><FaAngleLeft /></BackButtonTopbar>}           \n            <TopbarTitle>\n                <h4>{title}</h4>\n            </TopbarTitle>\n        </TopbarContainer>\n    );\n};\n"],"sourceRoot":""}